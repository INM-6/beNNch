parameterset:
    - name: file_paths
      parameter:
       - {name: base_path, type: string, _: BASE_PATH}  # absolute path to main repository
       - {name: model_path, type: string, _: MODEL_PATH}  # absolute path to microcircuit model, e.g., <BASE_PATH>/models/Potjans_2014
    - name: model_parameters
      parameter:
       - {name: model_name, type: string, _: "microcircuit"}  # for identifying the model, can be any unique string
       - {name: net_params, type: string, _: "network_params.py"}  # default network parameters
       - {name: scale_N, type: float, _: "1."}  # scaling the number of neurons, 1. -> original model
       - {name: scale_K, type: float, _: "1."}  # scaling the indegree, 1. -> original model
       - {name: poisson_input, type: string, _: "False"}  # choose Poisson or DC input
       - {name: V0_type, type: text, _: "'optimized'"}  # choose default or optimized initial conditions for the membrane potential
       - {name: synapse_type, type: text, _: "'static_synapse'"}  # type of synapses in the model
       - {name: sim_params, _: sim_params.py}  # default simulation parameters
       - {name: model_time_sim, type: float, _: "1000."}  # biological time to be simulated in ms
       - {name: model_time_presim, _: "100."}  # in ms
       - {name: rng_seed, _: "55"}  # rng seed
       - {name: record_spikes, type: string, _: ""}  # change to 'spike_detector' for spike recordings
       - {name: kwds, separator: ;, type: string, _: "{}"}  # can be used for passing arguments to SetKernelStatus, such as max_buffer_size_spike_data. If no arguments should be passed leave this empty. If something should be passed insert a dictionary, eg: {'max_buffer_size_spike_data': 10}
       - {name: scaling_type, _: "strong"}  # strong scaling for the microcircuit
    - name: machine_parameters
      parameter:
       - {name: vps_per_node, type: int, _: "VPS_PER_NODE"}  # number of virtual processes per node, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: walltime, type: string, _: "WALLTIME"}  # wall time for the job in format hh:mm:ss
       - {name: num_nodes, type: int, _: "NUM_NODES"}  # number of nodes, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: threads_per_task, type: int, _: "THREADS_PER_TASK"}  # number of threads per task, accepts a list in the format a,b,c,... for generating multiple runs
       - {name: modules, _: "nest-simulator/3.0"}  # modules to be loaded before execution
       - {name: affinity, type: string, _: "--cpu-bind=threads --distribution=block:cyclic:fcyclic"}  # processor affinity/pinning


